#include<iostream>
#include<string>
#include<fstream>
#include<sstream>
#include<vector>
using namespace std;

string key_word[32]={
		"auto","break","case","char","const","continue","default","double",
		"do","else","enum","extern","float","for","goto","if","int","long",
		"register","return","short","signed","sizeof","static","struct",
		"switch","typedef","union","unsigned","void","volatile","while"
	}; 

vector<int> Case_num;
int total_num=0;
int switch_num=0;
int case_num=0;
int ifelse_num=0;
int if_elseif_else_num=0;
int stack[1000]={0};
int top=-1;

int main(){
	string File1, temp;
    int Level;
	cout << "Please enter the root of the file：" << endl;
	cin >> File1;
	cout << "Please enter the level to inquire：" << endl;
	cout << "1--total" << endl;
	cout << "2--switch-case" << endl;
	cout << "3--if_else" << endl;
	cout << "4--if_elseif_else" << endl;
	cin >> Level;
	ifstream myfile(File1.c_str());
	int estimate_1(string x, string y);
	int estimate_2(char str);
	void Level_12(string str);
	void Level_34(string str);	 
	while (getline(myfile, temp)){
		istringstream is (temp);
		string s;
		if(Level >= 3){
			Level_34(temp);
		}
		while(is >> s){
			Level_12(s);
		}
	}
	if(Level >= 1){
		cout << "total num:" << total_num << endl;
	}
	if(Level >= 2){
		cout << "switch num:" << switch_num << endl;
		if(!Case_num.empty()){
			Case_num.push_back(case_num);
		}else{
			Case_num.push_back(0);
		}
		cout << "case_num :";
		for (int i = 1; i <= switch_num; i++){
			cout << Case_num[i] << " ";
		}
		cout << endl;
	}
	if(Level >= 3){
		cout << "if-else num:" << ifelse_num << endl;
	}
	if(Level >= 4){
		cout << "if-elseif-else num:" << if_elseif_else_num;
	}
}

int estimate_1 (string x, string y){
	int estimate_2(char str);
	int pos = x.find(y, 0);
	int len = y.length();	
	if(pos != string::npos){
		if(pos == 0) {
			if(estimate_2(x[pos+len]) == 0){
				return 1;
			}
			else 
			  	return 0;
		}else{
			if(estimate_2(x[pos+len]) == 0 && estimate_2(x[pos-1]) == 0){
				return 1;
			}
			else
				return 0;
		}
	}
	return 0;
}
int estimate_2(char str){
	if((str<='z' && str >= 'a') || (str <= 'Z' && str >= 'A'))
		return 1;
	else
		return 0;
}

void Level_12(string str){
	for(int i = 0; i < 32; i++){
		if(estimate_1(str, key_word[i]) == 1){
			if(estimate_1(str, "switch")){
				Case_num.push_back(case_num);
				switch_num++;
				case_num = 0;
			}
			if(estimate_1(str, "case")){
				case_num++;
			}
			total_num++;
			break;
		}
	}
}

void Level_34(string str){
	if(estimate_1(str, "else if")){
		top++;
		stack[top] = 2;
	}else{
		if(estimate_1(str, "else")){
			if(stack[top] == 1){
			 	ifelse_num++;
			 	top--;
			}else{
			 	if(stack[top] == 2){
			 		if_elseif_else_num++;
			 		top--;
				}
			}
		}else{
			if(estimate_1(str,"if")){
				top++;
				stack[top] = 1;
			}
		}
	}
}
